Started by user Anastas Davarski
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/Jenkinsfile-ECS
[Pipeline] {
[Pipeline] timestamps
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone AWS Demo Repository)
[Pipeline] checkout
[2021-01-12T22:12:41.696Z] The recommended git tool is: NONE
[2021-01-12T22:12:41.698Z] using credential devops
[2021-01-12T22:12:41.710Z]  > git rev-parse --is-inside-work-tree # timeout=10
[2021-01-12T22:12:41.724Z] Fetching changes from the remote Git repository
[2021-01-12T22:12:41.724Z]  > git config remote.origin.url git@github.com:adavarski/DevOps-AWS-demo.git # timeout=10
[2021-01-12T22:12:41.734Z] Fetching upstream changes from git@github.com:adavarski/DevOps-AWS-demo.git
[2021-01-12T22:12:41.734Z]  > git --version # timeout=10
[2021-01-12T22:12:41.756Z]  > git --version # 'git version 2.17.1'
[2021-01-12T22:12:41.756Z] using GIT_SSH to set credentials Github devops 
[2021-01-12T22:12:41.765Z]  > git fetch --tags --progress -- git@github.com:adavarski/DevOps-AWS-demo.git +refs/heads/*:refs/remotes/origin/* # timeout=10
[2021-01-12T22:12:43.648Z]  > git rev-parse origin/main^{commit} # timeout=10
[2021-01-12T22:12:43.661Z] Checking out Revision f4be73ee783cfd0526ae38e9a3608e28c0a82714 (origin/main)
[2021-01-12T22:12:43.662Z]  > git config core.sparsecheckout # timeout=10
[2021-01-12T22:12:43.672Z]  > git checkout -f f4be73ee783cfd0526ae38e9a3608e28c0a82714 # timeout=10
[2021-01-12T22:12:43.691Z] Commit message: "Create main.tf"
[2021-01-12T22:12:43.693Z]  > git rev-list --no-walk f4be73ee783cfd0526ae38e9a3608e28c0a82714 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (TF apply )
[Pipeline] dir
[2021-01-12T22:12:43.986Z] Running in /var/lib/jenkins/workspace/Jenkinsfile-ECS/aws-tf/ECR
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] withCredentials
[2021-01-12T22:12:44.113Z] Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] sh
[2021-01-12T22:12:44.441Z] + terraform init
[2021-01-12T22:12:44.441Z] 
[2021-01-12T22:12:44.441Z] Initializing the backend...
[2021-01-12T22:12:44.441Z] 
[2021-01-12T22:12:44.441Z] Initializing provider plugins...
[2021-01-12T22:12:44.441Z] - Finding latest version of hashicorp/aws...
[2021-01-12T22:12:45.358Z] - Installing hashicorp/aws v3.23.0...
[2021-01-12T22:13:11.769Z] - Installed hashicorp/aws v3.23.0 (signed by HashiCorp)
[2021-01-12T22:13:11.769Z] 
[2021-01-12T22:13:11.769Z] Terraform has created a lock file .terraform.lock.hcl to record the provider
[2021-01-12T22:13:11.769Z] selections it made above. Include this file in your version control repository
[2021-01-12T22:13:11.770Z] so that Terraform can guarantee to make the same selections by default when
[2021-01-12T22:13:11.770Z] you run "terraform init" in the future.
[2021-01-12T22:13:11.770Z] 
[2021-01-12T22:13:11.770Z] Terraform has been successfully initialized!
[2021-01-12T22:13:11.770Z] 
[2021-01-12T22:13:11.770Z] You may now begin working with Terraform. Try running "terraform plan" to see
[2021-01-12T22:13:11.770Z] any changes that are required for your infrastructure. All Terraform commands
[2021-01-12T22:13:11.770Z] should now work.
[2021-01-12T22:13:11.770Z] 
[2021-01-12T22:13:11.771Z] If you ever set or change modules or backend configuration for Terraform,
[2021-01-12T22:13:11.771Z] rerun this command to reinitialize your working directory. If you forget, other
[2021-01-12T22:13:11.771Z] commands will detect it and remind you to do so if necessary.
[Pipeline] sh
[2021-01-12T22:13:12.056Z] + terraform apply -auto-approve
[2021-01-12T22:13:21.942Z] aws_ecr_repository.demo-repository: Creating...
[2021-01-12T22:13:23.806Z] aws_ecr_repository.demo-repository: Creation complete after 3s [id=demo-repo]
[2021-01-12T22:13:23.806Z] aws_ecr_repository_policy.demo-repo-policy: Creating...
[2021-01-12T22:13:25.670Z] aws_ecr_repository_policy.demo-repo-policy: Creation complete after 2s [id=demo-repo]
[2021-01-12T22:13:25.920Z] 
[2021-01-12T22:13:25.920Z] Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
[Pipeline] sh
[2021-01-12T22:13:26.246Z] + terraform show
[2021-01-12T22:13:27.158Z] # aws_ecr_repository.demo-repository:
[2021-01-12T22:13:27.158Z] resource "aws_ecr_repository" "demo-repository" {
[2021-01-12T22:13:27.158Z]     arn                  = "arn:aws:ecr:us-east-2:218645542363:repository/demo-repo"
[2021-01-12T22:13:27.158Z]     id                   = "demo-repo"
[2021-01-12T22:13:27.158Z]     image_tag_mutability = "IMMUTABLE"
[2021-01-12T22:13:27.158Z]     name                 = "demo-repo"
[2021-01-12T22:13:27.158Z]     registry_id          = "218645542363"
[2021-01-12T22:13:27.158Z]     repository_url       = "218645542363.dkr.ecr.us-east-2.amazonaws.com/demo-repo"
[2021-01-12T22:13:27.158Z] 
[2021-01-12T22:13:27.158Z]     encryption_configuration {
[2021-01-12T22:13:27.158Z]         encryption_type = "AES256"
[2021-01-12T22:13:27.158Z]     }
[2021-01-12T22:13:27.158Z] 
[2021-01-12T22:13:27.158Z]     image_scanning_configuration {
[2021-01-12T22:13:27.158Z]         scan_on_push = false
[2021-01-12T22:13:27.158Z]     }
[2021-01-12T22:13:27.159Z] }
[2021-01-12T22:13:27.159Z] 
[2021-01-12T22:13:27.159Z] # aws_ecr_repository_policy.demo-repo-policy:
[2021-01-12T22:13:27.159Z] resource "aws_ecr_repository_policy" "demo-repo-policy" {
[2021-01-12T22:13:27.159Z]     id          = "demo-repo"
[2021-01-12T22:13:27.159Z]     policy      = jsonencode(
[2021-01-12T22:13:27.159Z]         {
[2021-01-12T22:13:27.159Z]             Statement = [
[2021-01-12T22:13:27.159Z]                 {
[2021-01-12T22:13:27.159Z]                     Action    = [
[2021-01-12T22:13:27.159Z]                         "ecr:BatchCheckLayerAvailability",
[2021-01-12T22:13:27.159Z]                         "ecr:BatchGetImage",
[2021-01-12T22:13:27.159Z]                         "ecr:CompleteLayerUpload",
[2021-01-12T22:13:27.159Z]                         "ecr:GetDownloadUrlForLayer",
[2021-01-12T22:13:27.159Z]                         "ecr:GetLifecyclePolicy",
[2021-01-12T22:13:27.159Z]                         "ecr:InitiateLayerUpload",
[2021-01-12T22:13:27.159Z]                         "ecr:PutImage",
[2021-01-12T22:13:27.159Z]                         "ecr:UploadLayerPart",
[2021-01-12T22:13:27.159Z]                     ]
[2021-01-12T22:13:27.159Z]                     Effect    = "Allow"
[2021-01-12T22:13:27.159Z]                     Principal = "*"
[2021-01-12T22:13:27.159Z]                     Sid       = "adds full ecr access to the demo repository"
[2021-01-12T22:13:27.159Z]                 },
[2021-01-12T22:13:27.159Z]             ]
[2021-01-12T22:13:27.159Z]             Version   = "2008-10-17"
[2021-01-12T22:13:27.159Z]         }
[2021-01-12T22:13:27.159Z]     )
[2021-01-12T22:13:27.159Z]     registry_id = "218645542363"
[2021-01-12T22:13:27.160Z]     repository  = "demo-repo"
[2021-01-12T22:13:27.160Z] }
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (TF Destroy)
Stage "TF Destroy" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // timestamps
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
