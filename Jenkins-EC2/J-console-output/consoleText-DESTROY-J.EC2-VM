Started by user A.Davarski
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/Jenkinsfile-DEMO
[Pipeline] {
[Pipeline] timestamps
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone AWS Demo Repository)
[Pipeline] checkout
[2021-01-12T09:28:58.105Z] The recommended git tool is: NONE
[2021-01-12T09:28:58.130Z] using credential devops
[2021-01-12T09:28:58.195Z]  > git rev-parse --is-inside-work-tree # timeout=10
[2021-01-12T09:28:58.357Z] Fetching changes from the remote Git repository
[2021-01-12T09:28:58.371Z]  > git config remote.origin.url git@github.com:adavarski/DevOps-AWS-demo.git # timeout=10
[2021-01-12T09:28:58.430Z] Fetching upstream changes from git@github.com:adavarski/DevOps-AWS-demo.git
[2021-01-12T09:28:58.430Z]  > git --version # timeout=10
[2021-01-12T09:28:58.461Z]  > git --version # 'git version 2.17.1'
[2021-01-12T09:28:58.461Z] using GIT_SSH to set credentials Github devops 
[2021-01-12T09:28:58.569Z]  > git fetch --tags --progress -- git@github.com:adavarski/DevOps-AWS-demo.git +refs/heads/*:refs/remotes/origin/* # timeout=10
[2021-01-12T09:29:01.893Z]  > git rev-parse origin/main^{commit} # timeout=10
[2021-01-12T09:29:02.084Z] Checking out Revision 21dded9bfc9bbb6abfe6d462b01beacc048d2b4c (origin/main)
[2021-01-12T09:29:02.089Z]  > git config core.sparsecheckout # timeout=10
[2021-01-12T09:29:02.158Z]  > git checkout -f 21dded9bfc9bbb6abfe6d462b01beacc048d2b4c # timeout=10
[2021-01-12T09:29:02.552Z] Commit message: "Update Jenkinsfile-DEMO"
[2021-01-12T09:29:02.560Z]  > git rev-list --no-walk ee673aedb9f966d979e688d49d13e1c20d35b835 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (TF init)
[Pipeline] dir
[2021-01-12T09:29:03.780Z] Running in /var/lib/jenkins/workspace/Jenkinsfile-DEMO/aws-tf
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] withCredentials
[2021-01-12T09:29:04.039Z] Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] sh
[2021-01-12T09:29:04.475Z] + terraform init
[2021-01-12T09:29:08.247Z] 
[2021-01-12T09:29:08.247Z] [0m[1mInitializing the backend...[0m
[2021-01-12T09:29:10.952Z] 
[2021-01-12T09:29:10.952Z] [0m[1mInitializing provider plugins...[0m
[2021-01-12T09:29:10.952Z] - Reusing previous version of hashicorp/aws from the dependency lock file
[2021-01-12T09:29:11.231Z] - Reusing previous version of hashicorp/template from the dependency lock file
[2021-01-12T09:29:12.172Z] - Installing hashicorp/aws v3.23.0...
[2021-01-12T09:29:59.107Z] - Installed hashicorp/aws v3.23.0 (signed by HashiCorp)
[2021-01-12T09:29:59.123Z] - Installing hashicorp/template v2.2.0...
[2021-01-12T09:29:59.382Z] - Installed hashicorp/template v2.2.0 (signed by HashiCorp)
[2021-01-12T09:29:59.382Z] 
[2021-01-12T09:29:59.382Z] [33m
[2021-01-12T09:29:59.382Z] [1m[33mWarning: [0m[0m[1mInterpolation-only expressions are deprecated[0m
[2021-01-12T09:29:59.382Z] 
[2021-01-12T09:29:59.382Z] [0m  on main.tf line 8, in data "template_file" "myuserdata":
[2021-01-12T09:29:59.382Z]    8:   template = [4m"${file("${path.cwd}/user-data.tpl")}"[0m
[2021-01-12T09:29:59.382Z] [0m
[2021-01-12T09:29:59.382Z] Terraform 0.11 and earlier required all non-constant expressions to be
[2021-01-12T09:29:59.382Z] provided via interpolation syntax, but this pattern is now deprecated. To
[2021-01-12T09:29:59.382Z] silence this warning, remove the "${ sequence from the start and the }"
[2021-01-12T09:29:59.382Z] sequence from the end of this expression, leaving just the inner expression.
[2021-01-12T09:29:59.382Z] 
[2021-01-12T09:29:59.382Z] Template interpolation syntax is still used to construct strings from
[2021-01-12T09:29:59.382Z] expressions when the template includes multiple interpolation sequences or a
[2021-01-12T09:29:59.382Z] mixture of literal strings and interpolations. This deprecation applies only
[2021-01-12T09:29:59.382Z] to templates that consist entirely of a single interpolation sequence.
[2021-01-12T09:29:59.382Z] 
[2021-01-12T09:29:59.382Z] (and one more similar warning elsewhere)
[2021-01-12T09:29:59.383Z] [0m[0m
[2021-01-12T09:29:59.383Z] [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[2021-01-12T09:29:59.383Z] [0m[32m
[2021-01-12T09:29:59.383Z] You may now begin working with Terraform. Try running "terraform plan" to see
[2021-01-12T09:29:59.383Z] any changes that are required for your infrastructure. All Terraform commands
[2021-01-12T09:29:59.383Z] should now work.
[2021-01-12T09:29:59.383Z] 
[2021-01-12T09:29:59.383Z] If you ever set or change modules or backend configuration for Terraform,
[2021-01-12T09:29:59.383Z] rerun this command to reinitialize your working directory. If you forget, other
[2021-01-12T09:29:59.383Z] commands will detect it and remind you to do so if necessary.[0m
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (TF plan env)
[Pipeline] dir
[2021-01-12T09:29:59.845Z] Running in /var/lib/jenkins/workspace/Jenkinsfile-DEMO/aws-tf
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] withCredentials
[2021-01-12T09:29:59.995Z] Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] sh
[2021-01-12T09:30:00.334Z] + terraform plan
[2021-01-12T09:30:48.707Z] [0m[1maws_security_group.demo-tf: Refreshing state... [id=sg-0b0833b7d5ba482ba][0m
[2021-01-12T09:30:48.707Z] [0m[1maws_instance.demo-tf: Refreshing state... [id=i-02015fceae96e0349][0m
[2021-01-12T09:31:01.313Z] 
[2021-01-12T09:31:01.313Z] [0m[1m[32mNo changes. Infrastructure is up-to-date.[0m[32m
[2021-01-12T09:31:01.313Z] 
[2021-01-12T09:31:01.313Z] This means that Terraform did not detect any differences between your
[2021-01-12T09:31:01.313Z] configuration and real physical resources that exist. As a result, no
[2021-01-12T09:31:01.313Z] actions need to be performed.[0m
[2021-01-12T09:31:01.313Z] [33m
[2021-01-12T09:31:01.313Z] [1m[33mWarning: [0m[0m[1mInterpolation-only expressions are deprecated[0m
[2021-01-12T09:31:01.313Z] 
[2021-01-12T09:31:01.313Z] [0m  on main.tf line 8, in data "template_file" "myuserdata":
[2021-01-12T09:31:01.313Z]    8:   template = [4m"${file("${path.cwd}/user-data.tpl")}"[0m
[2021-01-12T09:31:01.313Z] [0m
[2021-01-12T09:31:01.313Z] Terraform 0.11 and earlier required all non-constant expressions to be
[2021-01-12T09:31:01.313Z] provided via interpolation syntax, but this pattern is now deprecated. To
[2021-01-12T09:31:01.313Z] silence this warning, remove the "${ sequence from the start and the }"
[2021-01-12T09:31:01.313Z] sequence from the end of this expression, leaving just the inner expression.
[2021-01-12T09:31:01.313Z] 
[2021-01-12T09:31:01.313Z] Template interpolation syntax is still used to construct strings from
[2021-01-12T09:31:01.313Z] expressions when the template includes multiple interpolation sequences or a
[2021-01-12T09:31:01.313Z] mixture of literal strings and interpolations. This deprecation applies only
[2021-01-12T09:31:01.313Z] to templates that consist entirely of a single interpolation sequence.
[2021-01-12T09:31:01.313Z] 
[2021-01-12T09:31:01.313Z] (and one more similar warning elsewhere)
[2021-01-12T09:31:01.313Z] [0m[0m
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (TF apply env)
Stage "TF apply env" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (TF Destroy env)
[Pipeline] dir
[2021-01-12T09:31:02.541Z] Running in /var/lib/jenkins/workspace/Jenkinsfile-DEMO/aws-tf
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] withCredentials
[2021-01-12T09:31:02.810Z] Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] sh
[2021-01-12T09:31:03.382Z] + terraform destroy -auto-approve
[2021-01-12T09:34:28.240Z] [0m[1maws_instance.demo-tf: Destroying... [id=i-02015fceae96e0349][0m[0m
[2021-01-12T09:34:28.248Z] [0m[1maws_instance.demo-tf: Still destroying... [id=i-02015fceae96e0349, 10s elapsed][0m[0m
[2021-01-12T09:34:31.737Z] [0m[1maws_instance.demo-tf: Still destroying... [id=i-02015fceae96e0349, 20s elapsed][0m[0m
[2021-01-12T09:34:39.774Z] [0m[1maws_instance.demo-tf: Destruction complete after 28s[0m[0m
[2021-01-12T09:34:39.774Z] [0m[1maws_security_group.demo-tf: Destroying... [id=sg-0b0833b7d5ba482ba][0m[0m
[2021-01-12T09:34:41.649Z] [0m[1maws_security_group.demo-tf: Destruction complete after 2s[0m[0m
[2021-01-12T09:34:41.649Z] [33m
[2021-01-12T09:34:41.649Z] [1m[33mWarning: [0m[0m[1mInterpolation-only expressions are deprecated[0m
[2021-01-12T09:34:41.649Z] 
[2021-01-12T09:34:41.649Z] [0m  on main.tf line 8, in data "template_file" "myuserdata":
[2021-01-12T09:34:41.649Z]    8:   template = [4m"${file("${path.cwd}/user-data.tpl")}"[0m
[2021-01-12T09:34:41.649Z] [0m
[2021-01-12T09:34:41.649Z] Terraform 0.11 and earlier required all non-constant expressions to be
[2021-01-12T09:34:41.649Z] provided via interpolation syntax, but this pattern is now deprecated. To
[2021-01-12T09:34:41.649Z] silence this warning, remove the "${ sequence from the start and the }"
[2021-01-12T09:34:41.649Z] sequence from the end of this expression, leaving just the inner expression.
[2021-01-12T09:34:41.649Z] 
[2021-01-12T09:34:41.649Z] Template interpolation syntax is still used to construct strings from
[2021-01-12T09:34:41.654Z] expressions when the template includes multiple interpolation sequences or a
[2021-01-12T09:34:41.654Z] mixture of literal strings and interpolations. This deprecation applies only
[2021-01-12T09:34:41.654Z] to templates that consist entirely of a single interpolation sequence.
[2021-01-12T09:34:41.654Z] 
[2021-01-12T09:34:41.654Z] (and one more similar warning elsewhere)
[2021-01-12T09:34:41.654Z] [0m[0m
[2021-01-12T09:34:41.654Z] [0m[1m[32m
[2021-01-12T09:34:41.654Z] Destroy complete! Resources: 2 destroyed.[0m
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // timestamps
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
